version: "3.0"

services:
  broker-service:
    container_name: svc-broker
    build:
      context: ./broker-service
      target: runner
    restart: no
    ports:
      - "8080:80"
      - "2001:2345"
    security_opt:
      - seccomp:unconfined
    deploy:
      mode: replicated
      replicas: 1
  authentication-service:
    container_name: svc-auth
    build:
      context: ./authentication-service
      target: runner
    restart: no
    ports:
      - "8081:80"
      - "2002:2345"
    security_opt:
      - seccomp:unconfined
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable connect_timeout=10"
  logger-service:
    container_name: svc-logger
    build:
      context: ./logger-service
      target: runner
    restart: no
    ports:
      - "2005:2345"
    deploy:
      mode: replicated
      replicas: 1
  mail-service:
    container_name: svc-mailer
    build:
      context: ./mail-service
      target: runner
    restart: no
    ports:
      - "2003:2345" 
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "Luong Tran"
      FROM_ADDRESS: luong.tran@example.com
    depends_on:
      - mailhog
  listener-service:
    container_name: svc-listener
    build:
      context: ./listener-service
      target: runner
    restart: no
    ports:
      - "2004:2345"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      AMQP_URL: amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - rabbitmq
  postgres:
    image: "postgres:14.2"
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025"
      - "8025:8025"
  rabbitmq:
    image: "rabbitmq:3.9-alpine"
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/